from fastapi import FastAPI, File, UploadFile
from fastapi.responses import JSONResponse
from PIL import Image
import pytesseract
import requests
import io
import json
from fastapi.middleware.cors import CORSMiddleware
import pandas as pd

app = FastAPI()

app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],  # ho·∫∑c ['http://localhost:3000'] n·∫øu mu·ªën gi·ªõi h·∫°n
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)
pytesseract.pytesseract.tesseract_cmd = "/opt/homebrew/bin/tesseract"  # t√πy h·ªá ƒëi·ªÅu h√†nh

OLLAMA_URL = "http://localhost:11434/api/generate"

@app.post("/analyze")
async def analyze_image(file: UploadFile = File(...)):
    # ƒë·ªçc nhi·ªÅu file 
    contents = await file.read()
    temp_path = f"temp/{file.filename}"
    with open(temp_path, "wb") as f:
        f.write(contents)
        
    print()
    # OCR
    image = Image.open(io.BytesIO(await file.read()))
    text = pytesseract.image_to_string(image, lang="eng")
    # extracted_text = pytesseract.image_to_string(Image.open(image), lang="eng")
    # Prompt cho m√¥ h√¨nh LLM
    prompt = f"""
    T·ª´ ƒëo·∫°n vƒÉn sau, h√£y tr√≠ch xu·∫•t c√°c tr∆∞·ªùng sau v√† tr·∫£ v·ªÅ JSON thu·∫ßn:
    - ho_ten
    - ngay_sinh
    - so_cmnd
    - dia_chi

    ƒêo·∫°n vƒÉn:
    {text}
    """

    # G·ªçi m√¥ h√¨nh LLM qua Ollama
    payload = {
    "model": "llama3.2",   
    "prompt": f"""
    T·ª´ ƒëo·∫°n vƒÉn sau, h√£y tr√≠ch xu·∫•t v√† tr·∫£ k·∫øt qu·∫£ d∆∞·ªõi d·∫°ng JSON v·ªõi c√°c tr∆∞·ªùng sau:
    - ho_ten
    - ngay_sinh
    - so_cmnd
    - dia_chi
    - so_tien (n·∫øu c√≥)
    - m√£ s·ªë b·∫£o hi·ªÉm
    - m√£ th·ªÉ
    - ng∆∞·ªùi h√†nh ngh·ªÅ kh√°m ch·ªØa b·ªánh
    - don_vi_lam_viec
    - so_seri
    - chuan_doan_va_phuong_phap_dieu_tri

    H√£y ch·ªâ tr·∫£ ra JSON thu·∫ßn, kh√¥ng th√™m l·ªùi gi·∫£i th√≠ch.

    ƒêo·∫°n vƒÉn:
    {text}
    """,
    "stream": False
    }

    response = requests.post(OLLAMA_URL, json=payload)
    print("üì¶ Ollama raw response:", response.text)
    raw_output = response.json().get("response", "")
    print("üìÑ raw_output:", raw_output)
    try:
        data = json.loads(raw_output)
    except:
        return JSONResponse(content={"error": "LLM tr·∫£ v·ªÅ k·∫øt qu·∫£ kh√¥ng h·ª£p l·ªá", "raw": raw_output}, status_code=500)

    return data
